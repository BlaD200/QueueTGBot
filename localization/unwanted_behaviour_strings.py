from telegram import ParseMode

from localization.base_localization import BaseLocalization


class UnwantedBehaviourStrings(BaseLocalization):
    # ## ENGLISH LOCALIZATION ## #
    __no_rights_to_pin_message_text_en = (
        "I have no rights to pin this message.üò¢üòí\n"
        "Give me this permission or ask your adminüëÆ‚Äç‚ôÇÔ∏è to pin manually."
    )
    __no_rights_to_unpin_message_text_en = (
        "I would unpin that queue with pleasure, but you didn't give me the necessary rights.üò¢üòí\n"
        "Give me this permission or ask your adminüëÆ‚Äç‚ôÇÔ∏è to unpin manually."
    )
    __unknown_command_text_en = (
        "Unknown command.üòß \n"
        "To see the help type /help or type '/' to see the hints for commands, "
        "press tab and complete selected command by adding required arguments."
    )
    __unimplemented_command_text_en = (
        "This command hasn't been implemented yet.üòîüòî\n"
        "Type /about_me to contact the developer."
    )
    __unexpected_error_text_en = (
        "Something went wrong...üò¢üò¢\n"
        "You can sent error report using the /report command. "
        "If you describe the issue and steps, how to reproduce it in the report, this can help to fix it faster."
    )
    __unexpected_error_with_report_text_en = (
        "Something went wrong...üò¢üò¢ \n"
        "But don't worry, I've sent the error report to my developer. I suppose, this issue will be fixed soon."
    )

    # ## UKRAINIAN LOCALIZATION ## #
    __no_rights_to_pin_message_text_ukr = (
        '–Ø –Ω–µ –º–∞—é –¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø—Ä–∞–≤, —â–æ–± –∑–∞–∫—Ä—ñ–ø–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.üò¢üòí\n'
        '–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥–∞–π—Ç–µ –º–µ–Ω—ñ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –ø—Ä–∞–≤–∞, –∞–±–æ –ø–æ–ø—Ä–æ—Å—ñ—Ç—å –∑–∞–∫—Ä—ñ–ø–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —á–∞—Ç—ÉüëÆ‚Äç‚ôÇÔ∏è.'
    )
    __no_rights_to_unpin_message_text_ukr = (
        '–Ø –± —ñ–∑ –∑—ñ–¥–æ–≤–æ–ª–µ–Ω–Ω—è–º –≤—ñ–¥–∫—Ä—ñ–ø–∏–≤ –±–∏ –ø–æ—Ç—Ä—ñ–±–Ω—É —á–µ—Ä–≥—É, –∞–ª–µ –≤ –º–µ–Ω–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø—Ä–∞–≤.üò¢üòí\n'
        '–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥–∞–π—Ç–µ –º–µ–Ω—ñ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –ø—Ä–∞–≤–∞, –∞–±–æ –ø–æ–ø—Ä–æ—Å—ñ—Ç—å –≤—ñ–¥–∫—Ä—ñ–ø–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —á–∞—Ç—ÉüëÆ‚Äç‚ôÇÔ∏è.'
    )
    __unknown_command_text_ukr = (
        '–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞.üòß\n'
        '–©–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ–ø–æ–º–æ–≥—É, –≤–≤–µ–¥—ñ—Ç—å /help, –∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å \'/\', —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏ —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –∫–æ–º–∞–Ω–¥ —Ç–∞ —ó—Ö–Ω—ñ–π –æ–ø–∏—Å.'
        '–û–±–µ—Ä—ñ—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω—É –∫–æ–º–∞–Ω–¥—É —Ç–∞ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å Tab, –ø–æ—Ç—ñ–º –¥–æ–¥–∞–π—Ç–µ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ —Ç–∞ –Ω–∞—Ç–∏—Å–Ω—ñ—Å—Ç—å Enter. \n'
        '–©–æ–± –≤–≤—ñ–º–∫–Ω—É—Ç–∏ –ø—ñ–¥—Å–∫–∞–∑–∫–∏, –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ –∫–æ–º–∞–Ω–¥—É /silent_mode, –ø–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ *—Ä–µ–∂–∏–º —Ç–∏—à—ñ* _–≤–∏–º–∫–Ω–µ–Ω–æ_.'
    )
    __unimplemented_command_text_ukr = (
        'TODO: translation in progress...'
    )
    __unexpected_error_text_ukr = (
        '–ù–∞ –∂–∞–ª—å, —â–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫...üò¢üò¢\n'
        '–ê–ª–µ –í–∏ –º–æ–∂–µ—Ç–µ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É, —Å–∫–æ—Ä–∏—Å—Ç–∞–≤—à–∏—Å—å –∫–æ–º–∞–Ω–¥–æ—é /report.'
        '–Ø–∫—â–æ –í–∏ –æ–ø–∏—à–µ—Ç–µ –ø—Ä–æ–±–ª–µ–º—É —Ç–∞ —Ç–µ, —è–∫ —ó—ó –º–æ–∂–Ω–∞ –≤—ñ–¥—Ç–≤–æ—Ä–∏—Ç–∏, —Ü–µ –¥–æ–ø–æ–º–æ–∂–µ –ø—Ä–∏—à–≤–∏–¥—à–∏—Ç–∏ —ó—ó –≤–∏—Ä—ñ—à–µ–Ω–Ω—è.)'
    )
    __unexpected_error_with_report_text_ukr = (
        '–ù–∞ –∂–∞–ª—å, —â–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫...üò¢üò¢\n'
        '–ê–ª–µ –Ω–µ –ø–µ—Ä–µ–π–º–∞–π—Ç–µ—Å—è, —è –≤–∂–µ –≤—ñ–¥–ø—Ä–∞–≤–∏–≤ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–ª–∫—É —Å–≤–æ—î–º—É —Ä–æ–∑—Ä–æ–±–Ω–∏–∫—É.‚úâÔ∏è '
        '–î—É–º–∞—é, —Å–∫–æ—Ä–æ –≤—ñ–Ω –∑–º–æ–∂–µ —ó—ó –≤–∏–ø—Ä–∞–≤–∏—Ç–∏.'
    )

    def no_rights_to_pin_message(self):
        text: str
        if self._lang == 'ukr':
            text = self.__no_rights_to_pin_message_text_ukr
        else:
            text = self.__no_rights_to_pin_message_text_en
        return {'text': text}

    def no_rights_to_unpin_message(self):
        text: str
        if self._lang == 'ukr':
            text = self.__no_rights_to_unpin_message_text_ukr
        else:
            text = self.__no_rights_to_unpin_message_text_en
        return {'text': text}

    def unknown_command(self):
        text: str
        if self._lang == 'ukr':
            text = self.__unknown_command_text_ukr
        else:
            text = self.__unknown_command_text_en
        return {'text': text, 'parse_mode': ParseMode.MARKDOWN}

    def unimplemented_command(self):
        text: str
        if self._lang == 'ukr':
            text = self.__unimplemented_command_text_ukr
        else:
            text = self.__unimplemented_command_text_en
        return {'text': text}

    def unexpected_error(self):
        text: str
        if self._lang == 'ukr':
            text = self.__unexpected_error_text_ukr
        else:
            text = self.__unexpected_error_text_en
        return {'text': text}

    def unexpected_error_with_report(self):
        text: str
        if self._lang == 'ukr':
            text = self.__unexpected_error_with_report_text_ukr
        else:
            text = self.__unexpected_error_with_report_text_en
        return {'text': text}
